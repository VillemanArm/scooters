/*! normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css */
html{line-height:1.15;-webkit-text-size-adjust:100%;font-size:10px}a,body{color:#21201f}body{margin:0;font-family:"YS",sans-serif}details,main{display:block}h1{font-size:2em;font:900 7.2rem/100% "YS",sans-serif;margin:0;letter-spacing:-.144rem}hr{-webkit-box-sizing:content-box;box-sizing:content-box;height:0;overflow:visible}code,kbd,pre,samp{font:1em monospace,monospace}a{background:0 0;text-decoration:none}abbr[title]{border-bottom:none;-webkit-text-decoration:underline dotted;text-decoration:underline dotted}b,strong{font-weight:bolder}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-.25em}sup{top:-.5em}img{border-style:none;width:100%;height:100%;-o-object-fit:contain;object-fit:contain}button,input,optgroup,select,textarea{font:100%/1.15 inherit;margin:0}button,input{overflow:visible}button,select{text-transform:none}[type=button],[type=reset],[type=submit],button{-webkit-appearance:button}[type=button]::-moz-focus-inner,[type=reset]::-moz-focus-inner,[type=submit]::-moz-focus-inner,button::-moz-focus-inner{border-style:none;padding:0}[type=button]:-moz-focusring,[type=reset]:-moz-focusring,[type=submit]:-moz-focusring,button:-moz-focusring{outline:1px dotted ButtonText}fieldset{padding:.35em .75em .625em}legend{color:inherit;display:table;max-width:100%;white-space:normal}progress{vertical-align:baseline}textarea{overflow:auto}[type=checkbox],[type=radio],legend{-webkit-box-sizing:border-box;box-sizing:border-box;padding:0}[type=number]::-webkit-inner-spin-button,[type=number]::-webkit-outer-spin-button{height:auto}[type=search]{-webkit-appearance:textfield;outline-offset:-2px}[type=search]::-webkit-search-decoration{-webkit-appearance:none}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}summary{display:list-item}[hidden],template{display:none}@font-face{font-family:"YS";src:url(../fonts/text-regular.woff);font-style:normal;font-weight:400}@font-face{font-family:"YS";src:url(../fonts/text-black.woff);font-style:normal;font-weight:900}@font-face{font-family:"YS";src:url(../fonts/text-medium.woff);font-style:normal;font-weight:500}*{margin:0;padding:0}.container{width:91.5rem;margin:0 auto;opacity:1}*,.button{-webkit-box-sizing:border-box;box-sizing:border-box}.button{background:#ffde40;display:inline-block;padding:1.6rem 4.8rem;font-size:2.4rem;text-align:center;border:.3rem solid #ffde40;border-radius:3.6rem;color:#21201f}.hero{position:relative}.hero__background{position:absolute;width:100%;height:100%}.hero__background_1{opacity:.22;background:-webkit-gradient(linear,left bottom,left top,from(rgba(255,255,255,.2)),to(rgba(255,255,255,.2))),-webkit-gradient(linear,left top,right top,from(#ff5c4d),color-stop(25%,#eb469f),color-stop(72%,#8341ef),to(#3f68f9));background:linear-gradient(0deg,rgba(255,255,255,.2) 0,rgba(255,255,255,.2) 100%),linear-gradient(90deg,#ff5c4d 0,#eb469f 25%,#8341ef 72%,#3f68f9 100%);z-index:-2}.hero__background_2{background:-webkit-gradient(linear,left top,left bottom,from(rgba(255,255,255,0)),to(#fff));background:linear-gradient(180deg,rgba(255,255,255,0) 0,#fff 100%);z-index:-1}.hero>.container{display:grid;grid-template-columns:42rem 1fr}.hero__description{padding:12.4rem 0}.hero__logo{width:17.8rem;height:5.2rem}.hero__header{margin-top:6rem}.hero__conditions{margin-top:3.1rem;font-size:2.4rem;font-weight:500;line-height:130%}.hero__price{display:inline-block;position:relative;width:20rem;height:2.3rem;margin-left:.3rem;top:-.3rem}.hero__price-new,.hero__price-old{position:absolute;border-radius:2rem}.hero__price-new{padding:.2rem 1.1rem;z-index:1;font-size:2.4rem;background:radial-gradient(141.42% 141.42% at 100% 0,#e0b8ff 0,#b6b9ff 100%)}.hero__price-old{width:11.5rem;padding:.8rem 1.2rem;top:0;left:4rem;font-size:1.6rem;text-decoration:line-through;font-weight:500;line-height:120%;text-align:right;color:gray;background:-webkit-gradient(linear,left bottom,left top,from(rgba(255,255,255,.63)),to(rgba(255,255,255,.63))),radial-gradient(141.42% 141.42% at 100% 0,#e0b8ff 0,#b6b9ff 100%);background:linear-gradient(0deg,rgba(255,255,255,.63) 0,rgba(255,255,255,.63) 100%),radial-gradient(141.42% 141.42% at 100% 0,#e0b8ff 0,#b6b9ff 100%)}.hero__description>.button{margin-top:3.4rem;-webkit-box-shadow:0 4px 98px 0 rgba(255,222,64,.59);box-shadow:0 4px 98px 0 rgba(255,222,64,.59)}.hero__img{position:relative}.hero__img_background{position:absolute;top:-5rem;z-index:-2;-webkit-filter:blur(100px);filter:blur(100px)}.hero__img_content{width:77rem;position:absolute;z-index:-1;top:10rem;left:-10rem}@media (min-width:768px){.button:hover{background-color:#21201f;color:#ffde40}}@media (max-width:1290px){html{font-size:.7751937984vw}}@media (max-width:768px){html{font-size:2.6666666667vw}.container{width:31rem}h1{font-size:3.6rem;letter-spacing:-.072rem}.button{padding:1.6rem;font-size:1.8rem}.hero>.container{grid-template-columns:100%}.hero__description{padding:3.2rem 0}.hero__logo{width:11.2rem;height:3.2rem}.hero__header{margin-top:2.5rem}.hero__conditions{margin-top:2.5rem;position:relative;font-size:1.8rem}.hero__price{width:1.2rem;height:2.3rem;position:absolute;margin-left:.3rem;top:4.6rem}.hero__price-new,.hero__price-old{width:6.2rem;padding:0 .8rem;font-size:1.8rem;border-radius:2rem}.hero__price-old{width:8rem;padding:.4rem 1.2rem;top:0;left:4rem;font-size:1.3rem}.hero__description>.button{width:31.1rem;position:fixed;margin:0 auto;top:88%;left:50%;-webkit-transform:translate(-50%,0);-ms-transform:translate(-50%,0);transform:translate(-50%,0);-webkit-box-shadow:none;box-shadow:none}.hero__img{position:relative;width:100%;height:30.8rem}.hero__img_background{display:none}.hero__img_content{width:32rem;top:-1rem;left:-1rem}}
/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */